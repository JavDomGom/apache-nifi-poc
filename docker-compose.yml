version: "3.7"
services:

    nifi:
        container_name: nifi
        image: apache/nifi:latest
        ports:
            - "8080:8080"
        volumes:
            - "nifi_data:/nifi"
        environment:
            - NIFI_WEB_HTTP_PORT=8080
        networks:
            - internal

    zookeeper:
        container_name: zookeeper
        image: bitnami/zookeeper:latest
        ports:
            - "2181:2181"
        volumes:
            - "zookeeper_data:/bitnami"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - internal

    kafka:
        depends_on:
            - "zookeeper"
        container_name: kafka
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
            - "9093:9093"
        volumes:
            - "kafka_data:/bitnami"
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
            - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
        networks:
            - internal

    # mysql:
    #     container_name: mysql
    #     image: mysql:8.0
    #     restart: always
    #     environment:
    #         - MYSQL_ROOT_PASSWORD=root
    #         - MYSQL_DATABASE=db_test
    #     ports:
    #         - "3306:3306"
    #     networks:
    #         - internal

    # app:
    #     depends_on:
    #         - "mysql"
    #     container_name: flask-app
    #     build:
    #         context: ./app
    #         dockerfile: Dockerfile
    #     image: flask-app:latest
    #     environment:
    #         FLASK_ENV: development
    #         DB_USER: root
    #         DB_PASS: root
    #         DB_HOST: mysql
    #         DB_NAME: db_test
    #         JWT_SECRET_KEY: v3rYsECur3
    #     ports:
    #         - "5000:5000"
    #     restart: always
    #     networks:
    #         - internal

volumes:
    nifi_data:
        driver: local
    zookeeper_data:
        driver: local
    kafka_data:
        driver: local

networks:
    internal:
        driver: bridge
